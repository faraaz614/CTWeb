@model CT.Common.Entities.VehicleEntity
@{
    ViewBag.Title = "AddVehicle";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var fuellist = Model.FuelTypeList.Select(x => new SelectListItem { Value = x.ID.ToString(), Text = x.Value }).ToList();
}

<div id="accordion">
    <h3>Add Car</h3>
    @using (Html.BeginForm("AddVehicle", "Vehicle", FormMethod.Post))
    {
        @Html.HiddenFor(x => x.ID)
        <div class="row">
            <div class="card-body">
                <div class="form-group">
                    <label for="form1">Car Name</label>
                    @Html.TextBoxFor(x => x.VehicleName, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label for="form1">Stock ID</label>
                    @Html.TextBoxFor(x => x.StockID, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label for="form1">Description</label>
                    @Html.TextBoxFor(x => x.Description, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label for="form1">Is Deal Closed</label>
                    <div class="custom-control custom-radio custom-control-inline">
                        <input type="radio" class="custom-control-input" id="IsDealClosed1" value="true" name="IsDealClosed" @(Model.IsDealClosed ? "checked" : "")>
                        <label class="custom-control-label" for="IsDealClosed1">Yes</label>
                    </div>
                    /
                    <div class="custom-control custom-radio custom-control-inline">
                        <input type="radio" class="custom-control-input" id="IsDealClosed2" value="false" name="IsDealClosed" @(!Model.IsDealClosed ? "checked" : "")>
                        <label class="custom-control-label" for="IsDealClosed2">No</label>
                    </div>
                </div>
                <div class="form-group">
                    <label for="form1">Is Active</label>
                    <div class="custom-control custom-radio custom-control-inline">
                        <input type="radio" class="custom-control-input" id="defaultInline1" value="true" name="IsActive" @(Model.IsActive ? "checked" : "")>
                        <label class="custom-control-label" for="defaultInline1">Yes</label>
                    </div>
                    /
                    <div class="custom-control custom-radio custom-control-inline">
                        <input type="radio" class="custom-control-input" id="defaultInline2" value="false" name="IsActive" @(!Model.IsActive ? "checked" : "")>
                        <label class="custom-control-label" for="defaultInline2">No</label>
                    </div>
                </div>
                @*<div class="form-group">
        <label for="form1">Upload Pictures</label>
        <div class="row fileupload-buttonbar">
            <div class="col-lg-7">
                <!-- The fileinput-button span is used to style the file input field as button -->
                <span class="btn btn-success fileinput-button">
                    <i class="material-icons">add</i>
                    <span>Add files...</span>
                    <input type="file" name="files[]" multiple="">
                </span>
                <button type="submit" class="btn btn-primary start">
                    <i class="material-icons">file_upload</i>
                    <span>Start upload</span>
                </button>
                <button type="reset" class="btn btn-warning cancel">
                    <i class="material-icons">cancel</i>
                    <span>Cancel upload</span>
                </button>
                <button type="button" class="btn btn-danger delete">
                    <i class="material-icons">delete</i>
                    <span>Delete</span>
                </button>
                <input type="checkbox" class="toggle">
                <!-- The global file processing state -->
                <span class="fileupload-process"></span>
            </div>
            <!-- The global progress state -->
            <div class="col-lg-5 fileupload-progress fade">
                <!-- The global progress bar -->
                <div class="progress progress-sm progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100">
                    <div class="progress-bar progress-bar-success" style="width:0%;"></div>
                </div>
                <!-- The extended global progress state -->
                <div class="progress-extended">&nbsp;</div>
            </div>
        </div>
    </div>
    <div class="fileupload-wrapper">
        <input type="file" id="input-file-now" class="mdb_upload" />
    </div>*@
            </div>
        </div>
        <input type="submit" value="Save" class="btn btn-success cancel" />
        if (Model.ID > 0)
        {
            <a href="@Url.Action("DeleteVehicleByID", "Vehicle",new { vechileID = Model.ID })" class="btn btn-warning btn-rounded">Delete Car</a>
        }
        <a href="@Url.Action("Index", "Vehicle")" class="btn btn-warning btn-rounded">Cancel</a>
    }

    @if (Model.ID > 0)
    {
        <h3>Vehicle Details</h3>
        using (Html.BeginForm("AddVehicleDetails", "Vehicle", FormMethod.Post))
        {
            @Html.HiddenFor(x => x.ID)
            <div class="row">
                <div class="card-body">
                    <div class="form-row align-items-center">
                        <div class="col-4">
                            <div class="form-group">
                                <label class="control-label" for="inlineFormMake">1.Make</label>
                                @Html.TextBoxFor(x => x.VehicleDetail.Make, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="form-group">
                                <label for="inlineFormModel">2.Model</label>
                                @Html.TextBoxFor(x => x.VehicleDetail.Model, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="form-group">
                                <label for="inlineFormVariant">3.Variant</label>
                                @Html.TextBoxFor(x => x.VehicleDetail.Variant, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="form-row align-items-center">
                        <div class="col-4">
                            <div class="form-group">
                                <label for="inlineFormManufacturing">4. Year of Manufacturing</label>
                                @Html.TextBoxFor(x => x.VehicleDetail.YearOfManufacturing, new { @class = "form-control datepicker" })
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="form-group">
                                <label for="inlineFormFuel">5.Fuel Type</label>
                                @Html.DropDownListFor(x => x.VehicleDetail.FuelTypeID, fuellist, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="form-group">
                                <label for="inlineFormKilometers">6.Kilometers</label>
                                @Html.TextBoxFor(x => x.VehicleDetail.Kilometers, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="form-row align-items-center">
                        <div class="col-6">
                            <div class="form-group">
                                <label for="inlineFormTransmission">7. Transmission</label>
                                @Html.TextBoxFor(x => x.VehicleDetail.Transmission, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-group">
                                <label for="inlineFormRegistration">8.Registration No.</label>
                                @Html.TextBoxFor(x => x.VehicleDetail.RegistrationNo, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <input type="submit" value="Save" class="btn btn-success cancel" />
        }

        <h3>Document Details</h3>
        using (Html.BeginForm("AddVehicleDocument", "Vehicle", FormMethod.Post))
        {
            @Html.HiddenFor(x => x.ID)
            <div class="row">
                <div class="card-body">
                    <div class="form-row align-items-center">
                        <div class="col-4">
                            <div class="form-group form-check-inline">
                                <label>1.RC availability</label>
                            </div>
                            <div class="form-check form-check-inline">
                                @Html.RadioButtonFor(x => x.DocumentDetail.IsRCavailable, true, new { @class = "form-check-input", @checked = true })
                                <label class="form-check-label" for="materialInline1">Yes</label>
                            </div>
                            /
                            <div class="form-check form-check-inline">
                                @Html.RadioButtonFor(x => x.DocumentDetail.IsRCavailable, true, new { @class = "form-check-input", @checked = true })
                                <label class="form-check-label" for="materialInline2">No</label>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="form-group form-check-inline">
                                <label>2.Hypothication </label>
                            </div>
                            <div class="form-check form-check-inline">
                                @Html.RadioButtonFor(x => x.DocumentDetail.Hypothication, true, new { @class = "form-check-input", @checked = true })
                                <label class="form-check-label" for="materialInline1">Yes</label>
                            </div>
                            /
                            <div class="form-check form-check-inline">
                                @Html.RadioButtonFor(x => x.DocumentDetail.Hypothication, true, new { @class = "form-check-input", @checked = true })
                                <label class="form-check-label" for="materialInline2">No</label>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="form-group form-check-inline">
                                <label>3.If Yes: </label>
                            </div>
                            <div class="form-check form-check-inline">
                                @Html.RadioButtonFor(x => x.DocumentDetail.IsNOCavailable, true, new { @class = "form-check-input", @checked = true })
                                <label class="form-check-label" for="materialInline1">NOC available</label>
                            </div>
                            /
                            <div class="form-check form-check-inline">
                                @Html.RadioButtonFor(x => x.DocumentDetail.IsNOCavailable, true, new { @class = "form-check-input", @checked = true })
                                <label class="form-check-label" for="materialInline2">NOC not available</label>
                            </div>
                        </div>
                    </div>
                    <div class="form-row align-items-center">
                        <div class="col-6">
                            <div class="form-group">
                                <label for="owners">4.No. of owners</label>
                                @Html.TextBoxFor(x => x.DocumentDetail.NoOfOwners, new { @class = "form-control mb-2" })
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-group">
                                <label for="Keys">5.No.of Keys</label>
                                @Html.TextBoxFor(x => x.DocumentDetail.NoOfKeys, new { @class = "form-control mb-2" })
                            </div>
                        </div>
                    </div>
                    <div class="form-row align-items-center">
                        <div class="col-4">
                            <div class="form-group form-check-inline">
                                <label>6.Insurance:</label>
                            </div>
                            <div class="form-check form-check-inline">
                                @Html.RadioButtonFor(x => x.DocumentDetail.IsInsuranceAvailable, true, new { @class = "form-check-input", @checked = true })
                                <label class="form-check-label" for="materialInline1">Yes</label>
                            </div>
                            /
                            <div class="form-check form-check-inline">
                                @Html.RadioButtonFor(x => x.DocumentDetail.IsInsuranceAvailable, true, new { @class = "form-check-input", @checked = true })
                                <label class="form-check-label" for="materialInline2">No</label>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="form-group form-check-inline">
                                <label>a. If Yes :</label>
                            </div>
                            <div class="form-check form-check-inline">
                                @Html.RadioButtonFor(x => x.DocumentDetail.IsComprehensive, true, new { @class = "form-check-input", @checked = true })
                                <label class="form-check-label" for="materialInline1">Comprehensive</label>
                            </div>
                            /
                            <div class="form-check form-check-inline">
                                @Html.RadioButtonFor(x => x.DocumentDetail.IsThirdParty, true, new { @class = "form-check-input", @checked = true })
                                <label class="form-check-label" for="materialInline2">Third Party </label>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="form-group">
                                <label for="date-picker-example1">b. Expiry Date:</label>
                                @Html.TextBoxFor(x => x.DocumentDetail.InsuranceExpiryDate, new { @class = "form-control datepicker" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <input type="submit" value="Save" class="btn btn-success cancel" />
        }

        <h3>Technical Details</h3>
        using (Html.BeginForm("AddVehicleTechnical", "Vehicle", FormMethod.Post))
        {
            @Html.HiddenFor(x => x.ID)
            <div class="row">
                <div class="card-body">
                    <div class="form-group">
                        <label for="Engine">1.Engine</label>
                        @Html.TextBoxFor(x => x.TechnicalDetail.Engine, new { @class = "form-control mb-2" })
                    </div>
                    <div class="form-group">
                        <label for="Body">2.Body</label>
                        @Html.TextBoxFor(x => x.TechnicalDetail.Body, new { @class = "form-control mb-2" })
                    </div>
                    <div class="form-group">
                        <label for="Steering">3.Suspension & Steering System</label>
                        @Html.TextBoxFor(x => x.TechnicalDetail.SuspensionSteeringSystem, new { @class = "form-control mb-2" })
                    </div>
                    <div class="form-group">
                        <label for="Transmission">4.Transmission</label>
                        @Html.TextBoxFor(x => x.TechnicalDetail.Transmission, new { @class = "form-control mb-2" })
                    </div>
                    <div class="form-group">
                        <label for="Electrical">5.Electrical</label>
                        @Html.TextBoxFor(x => x.TechnicalDetail.Electrical, new { @class = "form-control mb-2" })
                    </div>
                    <div class="form-group">
                        <label for="AC">6.AC </label>
                        @Html.TextBoxFor(x => x.TechnicalDetail.AirCondition, new { @class = "form-control mb-2" })
                    </div>
                    <div class="form-group">
                        <label for="Brakes">7.Brakes</label>
                        @Html.TextBoxFor(x => x.TechnicalDetail.Brakes, new { @class = "form-control mb-2" })
                    </div>
                    <div class="form-group">
                        <label for="Condition">8.Tyres Condition</label>
                        @Html.TextBoxFor(x => x.TechnicalDetail.TyresCondition, new { @class = "form-control mb-2" })
                    </div>
                    <div class="form-group">
                        <label for="Information">9. Other Information (if any) </label>
                        @Html.TextBoxFor(x => x.TechnicalDetail.OtherInformation, new { @class = "form-control mb-2" })
                    </div>
                </div>
            </div>
            <input type="submit" value="Save" class="btn btn-success cancel" />
        }
    }

</div>  