@model CT.Common.Entities.BaseVehicleBIDEntity
@using CT.Web.Models
@{
    ViewBag.Title = "BID";
    string style = Model.VehicleEntity.IsDealClosed ? "card-header-warning" : "card-header-primary";
    string header = Model.VehicleEntity.IsDealClosed ? "Bids Closed" : "Bids";
    string headertitle = Model.VehicleEntity.IsDealClosed ? string.Empty : "Current Bidding";
}
<style>
    .topbuffer {
        margin-top: 10px;
    }

    .customtext {
        padding: 8px;
        line-height: 1.42857143;
    }
</style>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header @style">
                <h4 class="card-title ">@header</h4>
                <p class="card-category">@headertitle</p>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table">
                        <thead class=" text-primary">
                            <tr>
                                <th>
                                    Dealer Name
                                </th>
                                <th>
                                    BID Amount
                                </th>
                                @if (!Model.VehicleEntity.IsDealClosed)
                                {
                                    <th>
                                        Action
                                    </th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var bid in Model.ListBids)
                            {
                                <tr>
                                    <td>
                                        @bid.DealerName
                                    </td>
                                    <td>
                                        @bid.BIDAmount
                                    </td>
                                    @if (!Model.VehicleEntity.IsDealClosed)
                                    {
                                        <td>
                                            <a href="@Url.Action("CloseBID","Dealer",new { VehicleID = Model.VehicleEntity.ID, BidID = bid.ID })" class="btn btn-success btn-rounded btn-sm my-0">Close</a>
                                        </td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="card-body ui-widget-content topbuffer">
    <h4><b>Car</b></h4>
    <div class="row">
        <div class="col-4">
            <div class="form-group">
                <label for="form1">Car Name</label>
                @Html.SpanFor(x => x.VehicleEntity.VehicleName, "", new { @class = "customtext" })
            </div>
        </div>
        <div class="col-4">
            <div class="form-group">
                <label for="form1">Stock ID</label>
                @Html.SpanFor(x => x.VehicleEntity.StockID, "", new { @class = "customtext" })
            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-12">
            <div class="form-group">
                <label for="form1">Description</label>
                @Html.SpanFor(x => x.VehicleEntity.Description, "", new { @class = "customtext" })
            </div>
        </div>
    </div>
</div>

<div class="card-body ui-widget-content topbuffer">
    <h4><b>Car Details</b></h4>
    <div class="row">
        <div class="col-4">
            <div class="form-group">
                <label class="control-label" for="inlineFormMake">1.Make</label>
                @Html.SpanFor(x => x.VehicleEntity.VehicleDetail.Make, "", new { @class = "customtext" })
            </div>
        </div>
        <div class="col-4">
            <div class="form-group">
                <label for="inlineFormModel">2.Model</label>
                @Html.SpanFor(x => x.VehicleEntity.VehicleDetail.Model, "", new { @class = "customtext" })
            </div>
        </div>
        <div class="col-4">
            <div class="form-group">
                <label for="inlineFormVariant">3.Variant</label>
                @Html.SpanFor(x => x.VehicleEntity.VehicleDetail.Variant, "", new { @class = "customtext" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-4">
            <div class="form-group">
                <label for="inlineFormManufacturing">4. Year of Manufacturing</label>
                @Html.SpanFor(x => x.VehicleEntity.VehicleDetail.YearOfManufacturing, "", new { @class = "customtext" })
            </div>
        </div>
        <div class="col-4">
            <div class="form-group">
                <label for="inlineFormFuel">5.Fuel Type</label>
                @Html.SpanFor(x => x.VehicleEntity.VehicleDetail.FuelType, "", new { @class = "customtext" })
            </div>
        </div>
        <div class="col-4">
            <div class="form-group">
                <label for="inlineFormKilometers">6.Kilometers</label>
                @Html.SpanFor(x => x.VehicleEntity.VehicleDetail.Kilometers, "", new { @class = "customtext" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                <label for="inlineFormTransmission">7. Transmission</label>
                @Html.SpanFor(x => x.VehicleEntity.VehicleDetail.Transmission, "", new { @class = "customtext" })
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <label for="inlineFormRegistration">8.Registration No.</label>
                @Html.SpanFor(x => x.VehicleEntity.VehicleDetail.RegistrationNo, "", new { @class = "customtext" })
            </div>
        </div>
    </div>
</div>

<div class="card-body ui-widget-content topbuffer">
        <h4><b>Document Details</b></h4>
        <div class="row">
            <div class="col-4">
                <div class="form-group form-check-inline">
                    <label>1.RC availability</label>
                </div>
                @Html.Span("", Model.VehicleEntity.DocumentDetail != null && Model.VehicleEntity.DocumentDetail.IsRCavailable ? "Yes" : "No", new { @class = "customtext" })
            </div>
            <div class="col-4">
                <div class="form-group form-check-inline">
                    <label>2.Hypothication </label>
                </div>
                @Html.Span("", Model.VehicleEntity.DocumentDetail != null && Model.VehicleEntity.DocumentDetail.Hypothication ? "Yes" : "No", new { @class = "customtext" })
            </div>
            <div class="col-4">
                <div class="form-group form-check-inline">
                    <label>3.NOC Available </label>
                </div>
                @Html.Span("", Model.VehicleEntity.DocumentDetail != null && Model.VehicleEntity.DocumentDetail.IsNOCavailable ? "Yes" : "No", new { @class = "customtext" })
            </div>
        </div>
        <div class="row">
            <div class="col-6">
                <div class="form-group">
                    <label for="owners">4.No. of owners</label>
                    @Html.Span("", Convert.ToString(Model.VehicleEntity.DocumentDetail != null ? Model.VehicleEntity.DocumentDetail.NoOfOwners : 0), new { @class = "customtext" })
                </div>
            </div>
            <div class="col-6">
                <div class="form-group">
                    <label for="Keys">5.No.of Keys</label>
                    @Html.Span("", Convert.ToString(Model.VehicleEntity.DocumentDetail != null ? Model.VehicleEntity.DocumentDetail.NoOfKeys : 0), new { @class = "customtext" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-4">
                <div class="form-group form-check-inline">
                    <label>6.Insurance:</label>
                </div>
                @Html.Span("", Model.VehicleEntity.DocumentDetail != null && Model.VehicleEntity.DocumentDetail.IsInsuranceAvailable ? "Yes" : "No", new { @class = "customtext" })
            </div>
            <div class="col-4">
                <div class="form-group form-check-inline">
                    <label>Insurance :</label>
                </div>
                @Html.Span("", Model.VehicleEntity.DocumentDetail != null && Model.VehicleEntity.DocumentDetail.IsComprehensive ? "Comprehensive" : "Third Party", new { @class = "customtext" })
            </div>
            <div class="col-4">
                <div class="form-group">
                    <label for="date-picker-example1">b. Expiry Date:</label>
                    @Html.SpanFor(x => x.VehicleEntity.DocumentDetail.InsuranceExpiryDate, "", new { @class = "customtext" })
                </div>
            </div>
        </div>
    </div>

<div class="card-body ui-widget-content topbuffer">
    <h4><b>Technical Details</b></h4>
    <div class="row">
        <div class="col-4">
            <div class="form-group">
                <label for="Engine">1.Engine</label>
                @Html.SpanFor(x => x.VehicleEntity.TechnicalDetail.Engine, "", new { @class = "customtext" })
            </div>
        </div>
        <div class="col-4">
            <div class="form-group">
                <label for="Body">2.Body</label>
                @Html.SpanFor(x => x.VehicleEntity.TechnicalDetail.Body, "", new { @class = "customtext" })
            </div>
        </div>
        <div class="col-4">
            <div class="form-group">
                <label for="Steering">3.Suspension & Steering System</label>
                @Html.SpanFor(x => x.VehicleEntity.TechnicalDetail.SuspensionSteeringSystem, "", new { @class = "customtext" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-4">
            <div class="form-group">
                <label for="Transmission">4.Transmission</label>
                @Html.SpanFor(x => x.VehicleEntity.TechnicalDetail.Transmission, "", new { @class = "customtext" })
            </div>
        </div>
        <div class="col-4">
            <div class="form-group">
                <label for="Electrical">5.Electrical</label>
                @Html.SpanFor(x => x.VehicleEntity.TechnicalDetail.Electrical, "", new { @class = "customtext" })
            </div>
        </div>
        <div class="col-4">
            <div class="form-group">
                <label for="AC">6.AC </label>
                @Html.SpanFor(x => x.VehicleEntity.TechnicalDetail.AirCondition, "", new { @class = "customtext" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-4">
            <div class="form-group">
                <label for="Brakes">7.Brakes</label>
                @Html.SpanFor(x => x.VehicleEntity.TechnicalDetail.Brakes, "", new { @class = "customtext" })
            </div>
        </div>
        <div class="col-4">
            <div class="form-group">
                <label for="Condition">8.Tyres Condition</label>
                @Html.SpanFor(x => x.VehicleEntity.TechnicalDetail.TyresCondition, "", new { @class = "customtext" })
            </div>
        </div>
        <div class="col-4">
            <div class="form-group">
                <label for="Information">9. Other Information (if any) </label>
                @Html.SpanFor(x => x.VehicleEntity.TechnicalDetail.OtherInformation, "", new { @class = "customtext" })
            </div>
        </div>
    </div>
</div>
